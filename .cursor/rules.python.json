{
    "language": "python",
    "project_type": "音效文件名翻译工具",
    "code_style": {
        "indent": 4,
        "max_line_length": 100,
        "quotes": "single",
        "docstring": "triple_double",
        "line_spacing": {
            "after_class": 2,
            "after_method": 1,
            "after_imports": 1
        },
        "imports": {
            "order": [
                "standard_library",
                "third_party",
                "local"
            ],
            "group_by_type": true
        }
    },
    "naming_conventions": {
        "classes": "PascalCase",
        "functions": "snake_case",
        "variables": "snake_case",
        "constants": "UPPER_CASE",
        "private_members": "_prefix",
        "gui_elements": {
            "buttons": "btn_*",
            "labels": "lbl_*",
            "entries": "entry_*",
            "frames": "frame_*"
        }
    },
    "file_structure": {
        "gui": {
            "translator_gui.py": {
                "description": "主界面实现",
                "classes": ["AudioTranslatorGUI"],
                "responsibilities": [
                    "文件列表管理",
                    "翻译进度显示",
                    "服务选择",
                    "配置管理"
                ]
            },
            "service_manager.py": {
                "description": "服务管理界面",
                "classes": ["ServiceManagerWindow"],
                "responsibilities": [
                    "服务配置",
                    "API设置",
                    "模型管理",
                    "提示词管理"
                ]
            },
            "dictionary_manager.py": {
                "description": "词库管理界面",
                "classes": ["DictionaryManagerWindow"],
                "responsibilities": [
                    "词库CRUD",
                    "数据导入导出",
                    "分类管理"
                ]
            }
        },
        "core": {
            "translator.py": {
                "description": "翻译核心功能",
                "classes": ["Translator"],
                "responsibilities": [
                    "文件名翻译",
                    "服务调用",
                    "错误处理"
                ]
            },
            "config.py": {
                "description": "配置管理",
                "classes": ["Config"],
                "responsibilities": [
                    "配置读写",
                    "默认配置",
                    "版本管理"
                ]
            },
            "translation_database.py": {
                "description": "翻译数据库",
                "classes": ["TranslationDatabase"],
                "responsibilities": [
                    "数据存储",
                    "缓存管理",
                    "CRUD操作"
                ]
            },
            "ucs_parser.py": {
                "description": "UCS规范解析",
                "classes": ["UCSParser"],
                "responsibilities": [
                    "规范解析",
                    "数据验证",
                    "格式转换"
                ]
            }
        }
    },
    "dependencies": {
        "required": [
            "tkinter",
            "requests",
            "pandas",
            "tenacity"
        ],
        "optional": [
            "openpyxl",
            "logging"
        ],
        "version_constraints": {
            "pandas": ">=1.0.0",
            "requests": ">=2.25.0",
            "tenacity": ">=8.0.0"
        }
    },
    "patterns": {
        "avoid": [
            "global variables",
            "bare except",
            "multiple inheritance",
            "direct widget access",
            "hardcoded values"
        ],
        "prefer": [
            "type hints",
            "error handling",
            "logging",
            "config validation",
            "event-driven programming",
            "dependency injection",
            "composition over inheritance"
        ],
        "gui_patterns": {
            "use_ttk": true,
            "grid_layout": true,
            "responsive_design": true,
            "dark_theme": true
        },
        "CONFIG_MANAGEMENT": {
            "patterns": {
                "no_direct_config": {
                    "pattern": "(COLORS|CONFIGS|SETTINGS)\\s*=\\s*{",
                    "message": "禁止直接定义配置,请从 config.py 导入"
                },
                "use_config": {
                    "pattern": "from\\s+config\\s+import\\s+Config",
                    "required": true,
                    "message": "必须导入并使用 Config 类"
                }
            },
            "imports": {
                "required": ["config.Config"]
            }
        },
        "CONFIG_STRUCTURE": {
            "required_methods": [
                "setup_config_listener",
                "on_config_change",
                "load_initial_config"
            ],
            "class_structure": {
                "required_attributes": ["config", "_listeners"],
                "required_methods": ["__init__", "setup_config_listener"]
            }
        },
        "ERROR_HANDLING": {
            "patterns": {
                "config_error": {
                    "pattern": "try:\\s+.*?except\\s+Exception\\s+as\\s+e:",
                    "required": true,
                    "message": "配置相关操作必须包含错误处理"
                },
                "logging": {
                    "pattern": "logging\\.(error|info|warning)\\(",
                    "required": true,
                    "message": "必须记录配置相关的日志"
                }
            }
        }
    },
    "documentation": {
        "required": [
            "class docstrings",
            "public method docstrings",
            "complex logic comments",
            "configuration options",
            "error messages"
        ],
        "format": "Google style",
        "examples": {
            "class": "\"\"\"类的简要描述。\n\n详细描述。\n\nAttributes:\n    attr1: 属性1的描述\n    attr2: 属性2的描述\n\"\"\"",
            "method": "\"\"\"方法的简要描述。\n\nArgs:\n    param1: 参数1的描述\n    param2: 参数2的描述\n\nReturns:\n    返回值的描述\n\nRaises:\n    ValueError: 错误条件描述\n\"\"\""
        }
    },
    "testing": {
        "required": [
            "unit_tests",
            "integration_tests"
        ],
        "coverage": {
            "minimum": 80,
            "exclude": [
                "gui/*",
                "tests/*"
            ]
        }
    },
    "code_generation": {
        "temperature": {
            "default": 0.3,
            "ranges": {
                "bug_fixes": 0.1,
                "refactoring": 0.2,
                "new_features": 0.4,
                "creative_tasks": 0.7
            }
        },
        "constraints": {
            "max_tokens": 1000,
            "top_p": 0.95,
            "frequency_penalty": 0.1,
            "presence_penalty": 0.1
        },
        "priorities": [
            "accuracy",
            "consistency",
            "readability",
            "maintainability"
        ],
        "context_window": {
            "code": 2000,
            "documentation": 500
        }
    },
    "quality_control": {
        "validation": {
            "syntax_check": true,
            "type_check": true,
            "style_check": true,
            "logic_check": true
        },
        "review_focus": [
            "error handling",
            "edge cases",
            "performance",
            "security"
        ],
        "critical_paths": [
            "translation logic",
            "file operations",
            "API calls",
            "data persistence"
        ]
    }
} 